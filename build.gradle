buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'ForgeFS'
            url = 'http://files.minecraftforge.net/maven'
        }
		maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.10.1'
    }
}

apply from: './BuiltBrokenScripts/index.gradle'
apply plugin: 'forge'
ext.buildProps = file "build.properties"
apply plugin: 'curseforge'

println "Current Minecraft version = " + minecraft.apiVersion

def currentJvm = org.gradle.internal.jvm.Jvm.current()
println "Current Java version = " + currentJvm

buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "MC${config.version.minecraft}-F${config.version.forge}_v${config.version.mod.major}.${config.version.mod.minor}${config.version.mod.revis}"
group = "madscience"
archivesBaseName = "MadScience"

minecraft {
	
	replaceIn "MadScience.java"
	replace "@MAJOR@", config.version.mod.major
	replace "@MINOR@", config.version.mod.minor
	replace "@REVIS@", config.version.mod.revis
	
	if (System.getenv("BUILD_NUMBER") != null) {
		replace "@BUILD@", System.getenv("BUILD_NUMBER")
	}
	else
	{
		replace "@BUILD@", "[NIGHTLY]"
	}
	
	if (project.hasProperty("mad_signature")) {
        replace "@FINGERPRINT@", project.mad_signature
	}
}

if (System.getenv("BUILD_NUMBER") != null) {
    version += ".${System.getenv("BUILD_NUMBER")}";
}
else {
	version = "MC${config.version.minecraft}-F${config.version.forge}_[NIGHTLY]"
}

processResources {
	from 'build.properties'
}

import org.ajoberstar.grgit.Grgit

def gitHash = 'unknown'
if (new File(projectDir, '.git').exists()) {
    def repo = Grgit.open(project.file('.'))
    gitHash = repo.log().find().abbreviatedId
}

jar { 
    manifest.mainAttributes(
            "Built-By": System.getProperty('user.name'),
            "Created-By": currentJvm,
            "Implementation-Title": archivesBaseName,
            "Implementation-Version": project.version,
            "Git-Hash": gitHash,
    )
}

repositories {
    maven {
        name "BuiltBroken"
        url "http://ci.builtbroken.com/maven/"
    }
    maven {
        name 'ForgeFS'
        url 'http://files.minecraftforge.net/maven'
     }
}

dependencies {
	compile "dev.builtbroken.voltzengine:VoltzEngine:1.7.10-0.+:deobf-dev"
}

import net.minecraftforge.gradle.tasks.dev.ChangelogTask
import net.minecraftforge.gradle.common.Constants
import net.minecraftforge.gradle.delayed.*
 
task createChangelogJenkins(type: ChangelogTask) {
    def jobName = "${System.getenv().JOB_NAME}";
    def buildNumber = "1";
	
	if (jobName?.trim())
	{
		jobName = "Mad Science";
	}
	
	if (System.getenv("BUILD_NUMBER") != null) {
		buildNumber = "${System.getenv("BUILD_NUMBER")}";
		setServerRoot(new DelayedString(project, 'http://madsciencemod.com:8080/'));
		setJobName(new DelayedString(project, jobName.replaceAll("\\s+","%20").toString()));
		setAuthName(new DelayedString(project, 'MadScienceMod'));
		setAuthPassword(new DelayedString(project, 'Xp8k8BkF9UjVsR75A58c82RK'));
		setTargetBuild({buildNumber.toString()});
		setOutput(new DelayedFile(project, 'output/' + 'changelog' + '.txt'));
	}
}

if (System.getenv("BUILD_NUMBER") != null) {
	build.dependsOn "copyBuildXml", "createChangelog"
}
else
{
	build.dependsOn "copyBuildXml"
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

wrapper {
    version = "1.8"
}